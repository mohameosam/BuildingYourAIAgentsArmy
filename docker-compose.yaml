version: '3.8'

services:
  botpress:
    image: botpress/server:latest
    container_name: botpress
    ports:
      - "3000:3000"
    volumes:
      - ./botpress_data:/botpress/data
    environment:
      - BP_MODULES_ENDPOINT=http://localhost:3000
      - BP_HOST=0.0.0.0
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - WEBHOOK_URL=http://n8n:5678
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8npass
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8npass
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  pgvector:
    image: pgvector/pgvector:pg16
    container_name: pgvector
    ports:
      - "54320:5432"
    environment:
      - POSTGRES_USER=pgvector
      - POSTGRES_PASSWORD=pgvector
      - POSTGRES_DB=pgvector
    volumes:
      - pgvector:/var/lib/postgresql/data
    restart: always


  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped

  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=crm_database
      - MYSQL_USER=crm_user
      - MYSQL_PASSWORD=crm_pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./CRM/mysql-init:/docker-entrypoint-initdb.d
    restart: always

  crm_api:
    build: ./CRM/crm_flask_api
    container_name: crm_api
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=mysql
      - DB_USER=crm_user
      - DB_PASSWORD=crm_pass
      - DB_NAME=crm_database
    volumes:
      - ./CRM/crm_flask_api:/app
    depends_on:
      - mysql
    restart: always

volumes:
  botpress_data:
  n8n_data:
  postgres_data:
  ollama_data:
  pgvector:
  mysql_data:
